services:
  backend:
    build: backend
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - 8080:8080
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started

  db:
    image: postgres:16.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=backend
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - network
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - '8443:8443'
    networks:
      - network
    command:
      - "start-dev"
      - "--http-port=8443"
      - "--import-realm"
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: postgres:16.0-alpine
    container_name: keycloak-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
    volumes:
      - keycloak_db:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - network
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  network:
    driver: bridge

volumes:
  db:
    driver: local
  keycloak_db:
    driver: local